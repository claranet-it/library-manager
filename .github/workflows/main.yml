name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-         
          
    - name: Build NGINX Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./backend/docker/ngnix
        dockerfile: ./backend/docker/ngnix/Dockerfile
        load: true
        tags: library-manager-nginx:latest

    - name: Build PHP Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./backend/docker/php
        dockerfile: ./backend/docker/php/Dockerfile
        load: true
        tags: library-manager-php:latest

    - name: Run PHP-CS-Fixer
      run: |
        docker exec -e XDEBUG_MODE=off library-manager-php sh -c "php vendor/bin/php-cs-fixer fix --using-cache=no --dry-run --config .php-cs-fixer.dist.php -v"

    - name: Run PHPStan
      run: |
        docker exec -e XDEBUG_MODE=off library-manager-php sh -c "vendor/bin/phpstan analyse -c phpstan.neon"

    - name: Run tests
      run: |
        docker exec -e XDEBUG_MODE=off library-manager-php sh -c "php bin/phpunit --testdox"

    - name: Generate test coverage
      run: |
        docker-compose exec -e XDEBUG_MODE=coverage library-manager-php vendor/bin/phpunit --configuration phpunit.xml.dist --coverage-html coverage
